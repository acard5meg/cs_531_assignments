- delete 0,1,2 children, root, right and left side
- ensure find node is correct/updates correct children 
- copy longer and shorter strings to stress test the strcpy function doesn't seg fault
- delete empty list
- delete root from BST with 2 nodes causing errors
- have to check every node in list for duplicate alias and address



Tests done:
deleted node with longer name than replacement
delete tree w/ one node -> becomes empty and can add back into it
deleted node with shorter name than replacement
deleted node with 1 child
deleted node with 0 child
deleted node with 2 child

-on import 
-- invalid alias
-- invalid ip4
-- invalid ip3
-- invalid ip2
-- invalid ip1
-- missing alias
-- missing ip
-- full empty
-- repeat ip
-- case insensitive alias match
-- duplicate ip from opposite side of tree
-- import empty file
-- invalid file name

displayed tree - in alphabetic order

tried to add address with duplicate ip from right subtree but alias goes in left subtree
tried to add duplicate alias

looked up address
displayed aliases for location from root, left and right subtree simultaneously
saved to new file and overwrote file

-empty tree
-- looked up empty tree
-- update empty tree
-- delete from empty tree
-- displayed empty tree
-- display alias empty tree
-- saved empty tree
-- add to empty tree


------------------------------------------




Read in IPv4 address/alias from file. 
Bad number -> Good
bad alias -> Good
duplicate number -> Good
duplicate alias -> Good
empty file -> Good
invalid filename -> Good

Make sure you use nodes in different locations of the list including front, rear, somewhere in middle

Do everything on an empty list

For 1)
Valid IPv4 and valid alias
valid alias: a
valid alias: abcdefghij

Invalid first -1 -> Good
Invalid second 256 -> Good
invalid third 10003 -> Good
invalid fourth: 1234 -> Good
invalid alias: empty -> Good
invalid alias: abcdefghijk -> Good

repeat ipv4 not alias -> Good, always check display list
not ipv4 repeat alias -> Good, always check display list
not ipv4 repeat diffcase alias -> Good

For 2)
Alias in list -> Good
Alias not in list -> Good

For 3)
Alias in list, update properly, redisplay list -> Good
diff case alias in list, update properly, redisplay list -> Good
Alias not in list -> Good
alias in list, address is duplicate -> Good
alias in list, address is invalid -> Good, could test all 4 components

For 4)
Proper alias, confirm deletion (first, rear, middle) -> Good
proper alias, deny deletion -> Good
proper alias, incorrect input -> Good
delete from empty list -> Good

For 5)
Empty list -> Good
List with x nodes -> Good
List with x+1 nodes -> Good

For 6)
Separate values with " " and . -> Good
Value out of range (Re-prompt) -> Good
Location doesn't exist (Error message) -> Good
Good value -> Good

For 7)
Do it -> Good
Try to overwrite a file -> Good

For 8)
Good

All empty list 2-6 good